{"ast":null,"code":"var _jsxFileName = \"/Users/niv.meir/Documents/ai-quiz-game/ai-quiz-game/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizGame() {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchQuestion();\n  }, []);\n  async function fetchQuestion() {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:3000/generate-question\");\n      const data = await response.json();\n      setQuestion(data);\n      setSelectedAnswer(null);\n      setIsCorrect(null);\n    } catch (error) {\n      console.error(\"Error fetching question:\", error);\n    }\n    setLoading(false);\n  }\n  function handleAnswerClick(answer) {\n    if (selectedAnswer) return; // Prevent multiple selections\n    setSelectedAnswer(answer);\n    setIsCorrect(answer === question.correctAnswer);\n    setTimeout(fetchQuestion, 2000);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-6\",\n    children: loading || !question ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl font-semibold\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-2xl p-6 text-center shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"grid grid-cols-2 gap-4\",\n        children: question.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(motion.button, {\n          onClick: () => handleAnswerClick(answer),\n          className: `p-4 rounded-xl font-semibold text-lg transition-all duration-500 ${selectedAnswer === answer ? isCorrect ? \"bg-green-500\" : \"bg-red-500\" : \"bg-gray-700 hover:bg-gray-600\"}`,\n          disabled: selectedAnswer !== null,\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizGame, \"ycYrDuVhoeY7hUr3a0IUlE5pi3M=\");\n_c = QuizGame;\nvar _c;\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["useState","useEffect","motion","Button","Card","CardContent","jsxDEV","_jsxDEV","QuizGame","_s","question","setQuestion","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","loading","setLoading","fetchQuestion","response","fetch","data","json","error","console","handleAnswerClick","answer","correctAnswer","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","answers","map","index","button","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/niv.meir/Documents/ai-quiz-game/ai-quiz-game/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nexport default function QuizGame() {\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchQuestion();\n  }, []);\n\n  async function fetchQuestion() {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:3000/generate-question\");\n      const data = await response.json();\n      setQuestion(data);\n      setSelectedAnswer(null);\n      setIsCorrect(null);\n    } catch (error) {\n      console.error(\"Error fetching question:\", error);\n    }\n    setLoading(false);\n  }\n\n  function handleAnswerClick(answer) {\n    if (selectedAnswer) return; // Prevent multiple selections\n    setSelectedAnswer(answer);\n    setIsCorrect(answer === question.correctAnswer);\n    setTimeout(fetchQuestion, 2000);\n  }\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-6\">\n      {loading || !question ? (\n        <p className=\"text-xl font-semibold\">Loading...</p>\n      ) : (\n        <Card className=\"w-full max-w-2xl p-6 text-center shadow-xl\">\n          <h2 className=\"text-2xl font-bold mb-4\">{question.question}</h2>\n          <CardContent className=\"grid grid-cols-2 gap-4\">\n            {question.answers.map((answer, index) => (\n              <motion.button\n                key={index}\n                onClick={() => handleAnswerClick(answer)}\n                className={`p-4 rounded-xl font-semibold text-lg transition-all duration-500 ${\n                  selectedAnswer === answer\n                    ? isCorrect\n                      ? \"bg-green-500\"\n                      : \"bg-red-500\"\n                    : \"bg-gray-700 hover:bg-gray-600\"\n                }`}\n                disabled={selectedAnswer !== null}\n              >\n                {answer}\n              </motion.button>\n            ))}\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}